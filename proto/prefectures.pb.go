// Code generated by protoc-gen-go.
// source: prefectures.proto
// DO NOT EDIT!

package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Prefecture struct {
	Id     int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Romaji string `protobuf:"bytes,3,opt,name=romaji" json:"romaji,omitempty"`
}

func (m *Prefecture) Reset()                    { *m = Prefecture{} }
func (m *Prefecture) String() string            { return proto1.CompactTextString(m) }
func (*Prefecture) ProtoMessage()               {}
func (*Prefecture) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Prefecture) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Prefecture) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Prefecture) GetRomaji() string {
	if m != nil {
		return m.Romaji
	}
	return ""
}

type GetPrefecturesResponse struct {
	Prefectures []*Prefecture `protobuf:"bytes,1,rep,name=prefectures" json:"prefectures,omitempty"`
}

func (m *GetPrefecturesResponse) Reset()                    { *m = GetPrefecturesResponse{} }
func (m *GetPrefecturesResponse) String() string            { return proto1.CompactTextString(m) }
func (*GetPrefecturesResponse) ProtoMessage()               {}
func (*GetPrefecturesResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *GetPrefecturesResponse) GetPrefectures() []*Prefecture {
	if m != nil {
		return m.Prefectures
	}
	return nil
}

func init() {
	proto1.RegisterType((*Prefecture)(nil), "prefectures.Prefecture")
	proto1.RegisterType((*GetPrefecturesResponse)(nil), "prefectures.GetPrefecturesResponse")
}

func init() { proto1.RegisterFile("prefectures.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 181 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2c, 0x28, 0x4a, 0x4d,
	0x4b, 0x4d, 0x2e, 0x29, 0x2d, 0x4a, 0x2d, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x46,
	0x12, 0x52, 0xf2, 0xe0, 0xe2, 0x0a, 0x80, 0x73, 0x85, 0xf8, 0xb8, 0x98, 0x32, 0x53, 0x24, 0x18,
	0x15, 0x18, 0x35, 0x98, 0x83, 0x98, 0x32, 0x53, 0x84, 0x84, 0xb8, 0x58, 0xf2, 0x12, 0x73, 0x53,
	0x25, 0x98, 0x14, 0x18, 0x35, 0x38, 0x83, 0xc0, 0x6c, 0x21, 0x31, 0x2e, 0xb6, 0xa2, 0xfc, 0xdc,
	0xc4, 0xac, 0x4c, 0x09, 0x66, 0xb0, 0x28, 0x94, 0xa7, 0x14, 0xcc, 0x25, 0xe6, 0x9e, 0x5a, 0x82,
	0x30, 0xac, 0x38, 0x28, 0xb5, 0xb8, 0x20, 0x3f, 0xaf, 0x38, 0x55, 0xc8, 0x92, 0x0b, 0xd9, 0x4a,
	0x09, 0x46, 0x05, 0x66, 0x0d, 0x6e, 0x23, 0x71, 0x3d, 0x64, 0x97, 0x21, 0xb4, 0x05, 0x21, 0xab,
	0x75, 0x32, 0xe0, 0x92, 0x4a, 0xce, 0xcf, 0xd5, 0x2b, 0x49, 0xcc, 0x2e, 0x2d, 0x4e, 0xcd, 0x4d,
	0x4a, 0xd4, 0x4b, 0xcf, 0x2f, 0x4d, 0x49, 0x84, 0x78, 0xa4, 0xd8, 0x89, 0x1b, 0xc9, 0xb6, 0x28,
	0x56, 0xb0, 0x60, 0x12, 0x1b, 0x98, 0x32, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x71, 0x5b, 0x26,
	0x9a, 0xf9, 0x00, 0x00, 0x00,
}
